store as inlog naam en goed soos dit dat nie hoef heeltyd te fetch nie


app.post('/user', (req, res) => {
 const {isTrue} = req.body
 console.log(isTrue);
 if (isTrue) {
const userId = 1;
const selectedSlots = req.body;
console.log(selectedSlots,'slotters');
// const days = Object.keys(selectedSlots);
// const times = Object.values(selectedSlots);

// console.log('Days:', days);
// console.log('Times:', times);

// const updateValues = times.map((time, index) => `${days[index]} = '${time}'`).join(', ');
// console.log('updated',updateValues)
// const query = `UPDATE schedule SET ${updateValues} WHERE HealthPracID = ${userId}`;

// connection.query(query, (error, results, fields) => {
//   if (error) {
//     console.error('Error updating selectedSlots:', error);
//   } else {
//     console.log('Data updated successfully:', results);
//     res.status(200).send(results);
//   }
// });

// connection.end();
 }else{
//   get al users
//   const userId = 1;
//   const arr=[]

//   const data = req.body;
//   // arr.push(data)

// const days = Object.keys(data);
// const times = Object.values(data);

// console.log('Days:', days);
// console.log('Times:', times);
// const columns = days.join(', ');
// const placeholders = times.map(() => '?').join(', ');

// const vals=[]
// for (let i = 0; i < times.length; i++) {

// vals.push(times[i])
// }

// const serializedArrays = vals.map(arr => JSON.stringify(arr));
// console.log('serializedArrays:', serializedArrays,days,placeholders)

// const query = `INSERT INTO schedule (${days},HealthPracID) VALUES (${placeholders},1)`;

// connection.query(query,serializedArrays, (error, results, fields) => {
//   if (error) {
//     console.error('Error inserting data:', error);
//   } else {
//     console.log('Data inserted successfully:', results);
//   }
// })
// connection.end()

// Close the database connection

// arr.forEach((item)=>{
//     const {day,times}=item;
//     console.log(item)
//   })
//   console.log('yeyeyeyyeyey')
//   console.log(req)
//   const query = 'SELECT * users';
//   connection.query(query, (error, results, fields) => {
//   if (error) {
//     console.error('Error executing query:', error);
//   } else {
//     console.log('Query results:', results);
//    res.status(200).send(results);
//   }
// });
 }

})